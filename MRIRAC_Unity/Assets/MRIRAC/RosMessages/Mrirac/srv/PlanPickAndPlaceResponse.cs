//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mrirac
{
    [Serializable]
    public class PlanPickAndPlaceResponse : Message
    {
        public const string k_RosMessageName = "mrirac_msgs/PlanPickAndPlace";
        public override string RosMessageName => k_RosMessageName;

        public bool success;
        public Trajectory.JointTrajectoryMsg pre_grasp_trajectory;
        public Trajectory.JointTrajectoryMsg grasp_trajectory;
        public Trajectory.JointTrajectoryMsg pre_place_trajectory;
        public Trajectory.JointTrajectoryMsg place_trajectory;

        public PlanPickAndPlaceResponse()
        {
            this.success = false;
            this.pre_grasp_trajectory = new Trajectory.JointTrajectoryMsg();
            this.grasp_trajectory = new Trajectory.JointTrajectoryMsg();
            this.pre_place_trajectory = new Trajectory.JointTrajectoryMsg();
            this.place_trajectory = new Trajectory.JointTrajectoryMsg();
        }

        public PlanPickAndPlaceResponse(bool success, Trajectory.JointTrajectoryMsg pre_grasp_trajectory, Trajectory.JointTrajectoryMsg grasp_trajectory, Trajectory.JointTrajectoryMsg pre_place_trajectory, Trajectory.JointTrajectoryMsg place_trajectory)
        {
            this.success = success;
            this.pre_grasp_trajectory = pre_grasp_trajectory;
            this.grasp_trajectory = grasp_trajectory;
            this.pre_place_trajectory = pre_place_trajectory;
            this.place_trajectory = place_trajectory;
        }

        public static PlanPickAndPlaceResponse Deserialize(MessageDeserializer deserializer) => new PlanPickAndPlaceResponse(deserializer);

        private PlanPickAndPlaceResponse(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.success);
            this.pre_grasp_trajectory = Trajectory.JointTrajectoryMsg.Deserialize(deserializer);
            this.grasp_trajectory = Trajectory.JointTrajectoryMsg.Deserialize(deserializer);
            this.pre_place_trajectory = Trajectory.JointTrajectoryMsg.Deserialize(deserializer);
            this.place_trajectory = Trajectory.JointTrajectoryMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.success);
            serializer.Write(this.pre_grasp_trajectory);
            serializer.Write(this.grasp_trajectory);
            serializer.Write(this.pre_place_trajectory);
            serializer.Write(this.place_trajectory);
        }

        public override string ToString()
        {
            return "PlanPickAndPlaceResponse: " +
            "\nsuccess: " + success.ToString() +
            "\npre_grasp_trajectory: " + pre_grasp_trajectory.ToString() +
            "\ngrasp_trajectory: " + grasp_trajectory.ToString() +
            "\npre_place_trajectory: " + pre_place_trajectory.ToString() +
            "\nplace_trajectory: " + place_trajectory.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}
